// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0
// 	protoc        v3.11.4
// source: ipip/ipip.proto

package ipip

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type GetAreaDataByIpResp_ErrCode int32

const (
	GetAreaDataByIpResp_NONE GetAreaDataByIpResp_ErrCode = 0 // 成功
)

// Enum value maps for GetAreaDataByIpResp_ErrCode.
var (
	GetAreaDataByIpResp_ErrCode_name = map[int32]string{
		0: "NONE",
	}
	GetAreaDataByIpResp_ErrCode_value = map[string]int32{
		"NONE": 0,
	}
)

func (x GetAreaDataByIpResp_ErrCode) Enum() *GetAreaDataByIpResp_ErrCode {
	p := new(GetAreaDataByIpResp_ErrCode)
	*p = x
	return p
}

func (x GetAreaDataByIpResp_ErrCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetAreaDataByIpResp_ErrCode) Descriptor() protoreflect.EnumDescriptor {
	return file_ipip_ipip_proto_enumTypes[0].Descriptor()
}

func (GetAreaDataByIpResp_ErrCode) Type() protoreflect.EnumType {
	return &file_ipip_ipip_proto_enumTypes[0]
}

func (x GetAreaDataByIpResp_ErrCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetAreaDataByIpResp_ErrCode.Descriptor instead.
func (GetAreaDataByIpResp_ErrCode) EnumDescriptor() ([]byte, []int) {
	return file_ipip_ipip_proto_rawDescGZIP(), []int{1, 0}
}

type GetAreaDataByIpReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RemoteIp string `protobuf:"bytes,1,opt,name=remoteIp,proto3" json:"remoteIp,omitempty"` // ip地址
}

func (x *GetAreaDataByIpReq) Reset() {
	*x = GetAreaDataByIpReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipip_ipip_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAreaDataByIpReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAreaDataByIpReq) ProtoMessage() {}

func (x *GetAreaDataByIpReq) ProtoReflect() protoreflect.Message {
	mi := &file_ipip_ipip_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAreaDataByIpReq.ProtoReflect.Descriptor instead.
func (*GetAreaDataByIpReq) Descriptor() ([]byte, []int) {
	return file_ipip_ipip_proto_rawDescGZIP(), []int{0}
}

func (x *GetAreaDataByIpReq) GetRemoteIp() string {
	if x != nil {
		return x.RemoteIp
	}
	return ""
}

type GetAreaDataByIpResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// pos。 返回的所有数据都是zh-CN, 中文。
	Country  string                      `protobuf:"bytes,1,opt,name=Country,proto3" json:"Country,omitempty"`   // 国家
	Province string                      `protobuf:"bytes,2,opt,name=Province,proto3" json:"Province,omitempty"` // 省份
	City     string                      `protobuf:"bytes,3,opt,name=City,proto3" json:"City,omitempty"`         // 县市
	ErrCode  GetAreaDataByIpResp_ErrCode `protobuf:"varint,4,opt,name=errCode,proto3,enum=com.hubpd.ipip.GetAreaDataByIpResp_ErrCode" json:"errCode,omitempty"`
	ErrMsg   string                      `protobuf:"bytes,5,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
}

func (x *GetAreaDataByIpResp) Reset() {
	*x = GetAreaDataByIpResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipip_ipip_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAreaDataByIpResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAreaDataByIpResp) ProtoMessage() {}

func (x *GetAreaDataByIpResp) ProtoReflect() protoreflect.Message {
	mi := &file_ipip_ipip_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAreaDataByIpResp.ProtoReflect.Descriptor instead.
func (*GetAreaDataByIpResp) Descriptor() ([]byte, []int) {
	return file_ipip_ipip_proto_rawDescGZIP(), []int{1}
}

func (x *GetAreaDataByIpResp) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *GetAreaDataByIpResp) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *GetAreaDataByIpResp) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *GetAreaDataByIpResp) GetErrCode() GetAreaDataByIpResp_ErrCode {
	if x != nil {
		return x.ErrCode
	}
	return GetAreaDataByIpResp_NONE
}

func (x *GetAreaDataByIpResp) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

var File_ipip_ipip_proto protoreflect.FileDescriptor

var file_ipip_ipip_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x69, 0x70, 0x69, 0x70, 0x2f, 0x69, 0x70, 0x69, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0e, 0x63, 0x6f, 0x6d, 0x2e, 0x68, 0x75, 0x62, 0x70, 0x64, 0x2e, 0x69, 0x70, 0x69,
	0x70, 0x22, 0x30, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x72, 0x65, 0x61, 0x44, 0x61, 0x74, 0x61,
	0x42, 0x79, 0x49, 0x70, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x49, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x49, 0x70, 0x22, 0xd3, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x72, 0x65, 0x61, 0x44,
	0x61, 0x74, 0x61, 0x42, 0x79, 0x49, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x43, 0x69, 0x74, 0x79, 0x12, 0x45, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x68, 0x75, 0x62,
	0x70, 0x64, 0x2e, 0x69, 0x70, 0x69, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x65, 0x61, 0x44,
	0x61, 0x74, 0x61, 0x42, 0x79, 0x49, 0x70, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x45, 0x72, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72,
	0x72, 0x4d, 0x73, 0x67, 0x22, 0x13, 0x0a, 0x07, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x32, 0x62, 0x0a, 0x04, 0x49, 0x70, 0x69,
	0x70, 0x12, 0x5a, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x72, 0x65, 0x61, 0x44, 0x61, 0x74, 0x61,
	0x42, 0x79, 0x49, 0x70, 0x12, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x68, 0x75, 0x62, 0x70, 0x64,
	0x2e, 0x69, 0x70, 0x69, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x65, 0x61, 0x44, 0x61, 0x74,
	0x61, 0x42, 0x79, 0x49, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x68,
	0x75, 0x62, 0x70, 0x64, 0x2e, 0x69, 0x70, 0x69, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x65,
	0x61, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79, 0x49, 0x70, 0x52, 0x65, 0x73, 0x70, 0x42, 0x08, 0x5a,
	0x06, 0x2e, 0x2f, 0x69, 0x70, 0x69, 0x70, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ipip_ipip_proto_rawDescOnce sync.Once
	file_ipip_ipip_proto_rawDescData = file_ipip_ipip_proto_rawDesc
)

func file_ipip_ipip_proto_rawDescGZIP() []byte {
	file_ipip_ipip_proto_rawDescOnce.Do(func() {
		file_ipip_ipip_proto_rawDescData = protoimpl.X.CompressGZIP(file_ipip_ipip_proto_rawDescData)
	})
	return file_ipip_ipip_proto_rawDescData
}

var file_ipip_ipip_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_ipip_ipip_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_ipip_ipip_proto_goTypes = []interface{}{
	(GetAreaDataByIpResp_ErrCode)(0), // 0: com.hubpd.ipip.GetAreaDataByIpResp.ErrCode
	(*GetAreaDataByIpReq)(nil),       // 1: com.hubpd.ipip.GetAreaDataByIpReq
	(*GetAreaDataByIpResp)(nil),      // 2: com.hubpd.ipip.GetAreaDataByIpResp
}
var file_ipip_ipip_proto_depIdxs = []int32{
	0, // 0: com.hubpd.ipip.GetAreaDataByIpResp.errCode:type_name -> com.hubpd.ipip.GetAreaDataByIpResp.ErrCode
	1, // 1: com.hubpd.ipip.Ipip.GetAreaDataByIp:input_type -> com.hubpd.ipip.GetAreaDataByIpReq
	2, // 2: com.hubpd.ipip.Ipip.GetAreaDataByIp:output_type -> com.hubpd.ipip.GetAreaDataByIpResp
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_ipip_ipip_proto_init() }
func file_ipip_ipip_proto_init() {
	if File_ipip_ipip_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ipip_ipip_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAreaDataByIpReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipip_ipip_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAreaDataByIpResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ipip_ipip_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ipip_ipip_proto_goTypes,
		DependencyIndexes: file_ipip_ipip_proto_depIdxs,
		EnumInfos:         file_ipip_ipip_proto_enumTypes,
		MessageInfos:      file_ipip_ipip_proto_msgTypes,
	}.Build()
	File_ipip_ipip_proto = out.File
	file_ipip_ipip_proto_rawDesc = nil
	file_ipip_ipip_proto_goTypes = nil
	file_ipip_ipip_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// IpipClient is the client API for Ipip service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IpipClient interface {
	GetAreaDataByIp(ctx context.Context, in *GetAreaDataByIpReq, opts ...grpc.CallOption) (*GetAreaDataByIpResp, error)
}

type ipipClient struct {
	cc grpc.ClientConnInterface
}

func NewIpipClient(cc grpc.ClientConnInterface) IpipClient {
	return &ipipClient{cc}
}

func (c *ipipClient) GetAreaDataByIp(ctx context.Context, in *GetAreaDataByIpReq, opts ...grpc.CallOption) (*GetAreaDataByIpResp, error) {
	out := new(GetAreaDataByIpResp)
	err := c.cc.Invoke(ctx, "/com.hubpd.ipip.Ipip/GetAreaDataByIp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IpipServer is the server API for Ipip service.
type IpipServer interface {
	GetAreaDataByIp(context.Context, *GetAreaDataByIpReq) (*GetAreaDataByIpResp, error)
}

// UnimplementedIpipServer can be embedded to have forward compatible implementations.
type UnimplementedIpipServer struct {
}

func (*UnimplementedIpipServer) GetAreaDataByIp(context.Context, *GetAreaDataByIpReq) (*GetAreaDataByIpResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAreaDataByIp not implemented")
}

func RegisterIpipServer(s *grpc.Server, srv IpipServer) {
	s.RegisterService(&_Ipip_serviceDesc, srv)
}

func _Ipip_GetAreaDataByIp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAreaDataByIpReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IpipServer).GetAreaDataByIp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.hubpd.ipip.Ipip/GetAreaDataByIp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IpipServer).GetAreaDataByIp(ctx, req.(*GetAreaDataByIpReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Ipip_serviceDesc = grpc.ServiceDesc{
	ServiceName: "com.hubpd.ipip.Ipip",
	HandlerType: (*IpipServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAreaDataByIp",
			Handler:    _Ipip_GetAreaDataByIp_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ipip/ipip.proto",
}
